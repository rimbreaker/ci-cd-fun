name: backend testing

on:
  pull_request:
    branches: [main]
    paths: ["server/**"]

jobs:
  Node-Setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: directory checkout
        uses: actions/checkout@v2
      - name: Node setup
        uses: actions/setup-node@v2.5.1
        with:
          cache: "yarn"
          cache-dependency-path: server/yarn.lock
      - name: cache node modules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: installing dependencies
        run: yarn

  Linting:
    needs: Node-Setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: directory checkout
        uses: actions/checkout@v2
      - name: linting
        run: |
          yarn
          yarn lint

  Test-Build:
    needs: Node-Setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: directory checkout
        uses: actions/checkout@v2
      - name: cache node modules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: test build
        run: |
          yarn
          yarn build

  Unit-Tests:
    needs: Node-Setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: directory checkout
        uses: actions/checkout@v2

      - name: cache node modules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: unit testing
        run: |
          yarn
          yarn test --json > unit-test-report.json

      - name: upload testing report
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: ./server/unit-test-report.json
          if-no-files-found: error

  E2E-Tests:
    needs: Node-Setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: cache node modules
        uses: actions/cache@v2
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Run E2E tests
        run: |
         yarn
         yarn test:e2e
  
