name: frontend CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths: ["web/**"]

jobs:
  Node-Setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - name: directory checkout
        uses: actions/checkout@v2
      - name: Node setup
        uses: actions/setup-node@v2.5.1
        with:
          cache: "yarn"
          cache-dependency-path: web/yarn.lock
          
      - name: installing dependencies
        run: yarn > yarn-report.txt
        
      - run: ls
      
      - run: echo yarn-report.txt
        
      - name: upload dependency report
        uses: actions/upload-artifact@v2
        with:
          name: audit
          path: artifacts/yarn-report.txt

  Linting:
    needs: Node-Setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - name: directory checkout
        uses: actions/checkout@v2

      - name: cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: linting js
        run: |
          yarn
          yarn lint:js

      - name: linting css
        run: yarn lint:css

  Test-Build:
    needs: Node-Setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - name: directory checkout
        uses: actions/checkout@v2

      - name: cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: test build
        run: |
          yarn
          yarn build

  Unit-Tests:
    needs: Node-Setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - name: directory checkout
        uses: actions/checkout@v2

      - name: cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: unit testing
        run: |
          yarn
          yarn test
  
  Dependency-Audit-High:
    needs: Node-Setup
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: web
    steps:
      - name: directory checkout
        uses: actions/checkout@v2

      - name: cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: audit
        shell: bash
        run: |
          yarn
          yarn yarn-audit-ci --high > audit.report.txt
        
      - name: upload audit report
        uses: actions/upload-artifact@v2
        with:
          name: audit
          path: audit-report.txt

  Dependency-Audit-Info:
    needs: Node-Setup
    runs-on: ubuntu-latest
    continue-on-error: true
    defaults:
      run:
        working-directory: web
    steps:
      - name: directory checkout
        uses: actions/checkout@v2

      - name: cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: audit
        shell: bash
        run: yarn audit --json > audit-report.json
          
        if: failure() 
      - name: upload audit report
        uses: actions/upload-artifact@v2
        with:
          name: audit
          path: audit-report.json

  Build-n-deploy-frontend:
    needs: [Linting, Test-Build, Unit-Tests,Dependency-Audit-High]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy frontend to heroku
        uses: AkhileshNS/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "ci-cd-front"
          heroku_email: ${{secrets.MY_MAIL}}
          appdir: "web"
